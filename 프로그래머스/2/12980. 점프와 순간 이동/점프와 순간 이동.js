
function solution(n)
{
    //dp 필요없음.
    //그리디.
    //짝수면 2로 계속 나누고, 홀수면 건전지 사용량 +1 
    let count = 0;
    while(n!==0){
        if (n%2!==0){
            n-=1;
            count++;
        }
        n/=2;
    }
    
    return count;
}
/*
가중치가 있으니 다익스트라로 처리하자.
1) 한 번에 k칸을 앞으로 점프한다.
2) 현재까지 온 거리 x 2에 해당하는 위치로 순간이동을 한다.

*순간이동 할 시 : 건전지 사용량 0
*k칸 : k 만큼의 건전지 사용량.

고로 아이언 슈트를 착용하고 이동할 때는 순간 이동을 하는 것이 더 효율적.
아이언 슈트 구매자는 n만큼 떨어져 있는 장소로 가려고 함.
건전지 사용량을 줄이기 위해, 점프로 이동하는 것은 최소로 하려고 함.
사용해야 하는 건전지 사용량의 최솟값을 return하는 solution 함수를 만들어라...?
*/